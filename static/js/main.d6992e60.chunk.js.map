{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItem","oldItems","filter","arrElem","index","type","placeholder","value","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAuBeA,EApBE,SAACC,GAId,OACC,mCACA,sBAAKC,UAAY,aAAjB,UACE,mBAAGA,UAAY,cAAc,cAAc,OAC3CC,QAAS,WACLF,EAAMG,SAASH,EAAMI,OAIzB,6BAAKJ,EAAMK,aC6CHC,EA1DH,WAEV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAcMC,EAAa,SAACR,GAEjBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC9B,OAAOA,IAAUZ,SAKzB,OACE,mCAEA,qBAAKH,UAAY,WAAjB,SAEI,sBAAKA,UAAY,aAAjB,UACC,uBACC,2CACD,uBACA,uBAAOgB,KAAK,OAAOC,YAAY,cAAcC,MAAOX,EAAWY,SA9BpD,SAACC,GAChBZ,EAAaY,EAAMC,OAAOH,UA8BtB,wBAAQjB,QA3BK,WACjBS,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAGvBC,EAAa,KAsBT,iBAEA,6BAEKC,EAAMa,KAAI,SAACC,EAASR,GACnB,OAAO,cAAC,EAAD,CAEPZ,GAAMY,EACNX,KAAQmB,EACRrB,SAAYS,GAHLI,gBClCPS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6992e60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst ToDoList = (props) =>{\r\n\r\n    \r\n\r\n    return (\r\n     <>\r\n     <div className = \"todo_style\">\r\n       <i className = \"fa fa-times\" sria-hidden = \"true\" \r\n       onClick={() => {\r\n           props.onSelect(props.id);\r\n       }}\r\n\r\n       />\r\n       <li>{props.text}</li>\r\n     </div>\r\n     </>\r\n    );\r\n    \r\n};\r\n\r\nexport default ToDoList;","import React, {useState} from 'react';\nimport ToDoList from \"./ToDoList\";\n\nconst App = () => {\n\n  const [inputList, setInputList] = useState(\"\");\n\n  const [Items, setItems] = useState([]);\n\n  const itemEvent = (event) =>{\n     setInputList(event.target.value);\n  };\n  \n  const listOfItems = () =>{\n     setItems((oldItems) =>{\n       return [...oldItems, inputList];\n     });\n\n     setInputList(\"\");\n  };\n\n  const deleteItem = (id) =>{\n     //console.log(\"deleted\");\n     setItems((oldItems) =>{\n       return oldItems.filter((arrElem, index) =>{\n          return index !== id;\n       })\n     })\n  };\n\n  return (\n    <>\n\n    <div className = \"main_div\">\n\n        <div className = \"center_div\">\n         <br/>\n          <h1>ToDo List</h1>\n         <br/>\n         <input type=\"text\" placeholder=\"Add An Item\" value={inputList} onChange={itemEvent}/>\n         <button onClick={listOfItems}> + </button>\n\n         <ol>\n           {/* <li>{inputList}</li> */}\n             {Items.map((itemval, index) => {\n               return <ToDoList \n               key = {index}\n               id = {index}\n               text = {itemval}\n               onSelect = {deleteItem}\n               />;\n             })}\n         </ol>\n        </div>\n\n    </div>\n\n    </>\n  )\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}